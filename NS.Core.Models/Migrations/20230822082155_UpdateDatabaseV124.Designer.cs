// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NS.Core.Models;

#nullable disable

namespace NS.Core.Models.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230822082155_UpdateDatabaseV124")]
    partial class UpdateDatabaseV124
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NS.Core.Models.Entities.AnhCauLacBo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CauLacBoId")
                        .HasColumnType("bigint");

                    b.Property<long>("FileUploadId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CauLacBoId");

                    b.HasIndex("FileUploadId");

                    b.ToTable("AnhCauLacBo");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.BinhLuan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TaiKhoanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ThoiGianBinhLuan")
                        .HasColumnType("datetime2");

                    b.Property<long>("TinTucId")
                        .HasColumnType("bigint");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("TinTucId");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.BoPhanLienHe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BoPhanChaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenBoPhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBoPhanEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoPhanChaId");

                    b.ToTable("BoPhanLienHe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CaiDatChiTiet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CaiDatTongTheId")
                        .HasColumnType("bigint");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDeTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CaiDatTongTheId");

                    b.ToTable("CaiDatChiTiet");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CaiDatEmail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDeEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CaiDatEmail");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CaiDatTongThe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotaTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PhienBanId")
                        .HasColumnType("bigint");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDeTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TrangId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PhienBanId");

                    b.HasIndex("TrangId");

                    b.ToTable("CaiDatTongThe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CatDatHeThong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CaiDat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CauHinh")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CatDatHeThong");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ChiTietChamThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HoSoThiId")
                        .HasColumnType("bigint");

                    b.Property<long>("MonThiTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("TieuChiMonThiId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HoSoThiId");

                    b.HasIndex("MonThiTuyenSinhId");

                    b.HasIndex("TieuChiMonThiId");

                    b.ToTable("ChiTietChamThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ChungChiLienQuan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("FileChungChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HoSoTuyenDungId")
                        .HasColumnType("bigint");

                    b.Property<string>("KetQua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChungChi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenDungId");

                    b.ToTable("ChungChiLienQuan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ChuyenMuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenChuyenMuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuyenMucEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChuyenMuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CoSoVatChat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("HienThi")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenDiaDiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDiaDiemTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoSoVatChat");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.DoiNgayThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HoSoThiId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ThoiGianThiId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HoSoThiId");

                    b.HasIndex("ThoiGianThiId");

                    b.ToTable("DoiNgayThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.FileUpload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<Guid>("FileName")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("LinkFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileUpload");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.GiaoVienTrongThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LaGiaoVienChinh")
                        .HasColumnType("bit");

                    b.Property<long>("LopDuThiId")
                        .HasColumnType("bigint");

                    b.Property<long>("ThanhVienHoiDongId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LopDuThiId");

                    b.HasIndex("ThanhVienHoiDongId");

                    b.ToTable("GiaoVienTrongThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.GocTruyenThong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoTrang")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GocTruyenThong");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HeDaoTao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHeDaoTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenHeDaoTaoEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HeDaoTao");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HoSoTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("LopDuThiId")
                        .HasColumnType("bigint");

                    b.Property<string>("SoBaoDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThaiDuThi")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiKetQua")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenSinhId");

                    b.HasIndex("LopDuThiId");

                    b.ToTable("HoSoThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoTuyenDung", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnhHoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileCV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("TaiKhoanId")
                        .HasColumnType("bigint");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<long>("ViTriTuyenDungId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("ViTriTuyenDungId");

                    b.ToTable("HoSoTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoTuyenSinh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnhChiEm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhGiayKhaiSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhHoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChungChiTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeNghiCuaPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiHienTai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<long>("HeDaoTaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("HoKhauThuongTru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoanCanhDacBiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KenhGioiThieu")
                        .HasColumnType("int");

                    b.Property<long>("KhoiTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("KyTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("LopDuThiId")
                        .HasColumnType("bigint");

                    b.Property<string>("MaMoet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSoHoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NangKhieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiaoLuu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiaoLuuBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiaoLuuEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiaoLuuKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayGiaoLuuStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiKhaiHoSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoThich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SucKhoe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TaiKhoanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("ThamGiaClub")
                        .HasColumnType("bit");

                    b.Property<string>("ThanhTichKhac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ThoiGianThiId")
                        .HasColumnType("bigint");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiDuThi")
                        .HasColumnType("int");

                    b.Property<string>("TruongDangTheoHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeDaoTaoId");

                    b.HasIndex("KhoiTuyenSinhId");

                    b.HasIndex("KyTuyenSinhId");

                    b.HasIndex("LopDuThiId");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("ThoiGianThiId");

                    b.ToTable("HoSoTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HocPhi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HeDaoTaoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Lop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NamHocPhiId")
                        .HasColumnType("bigint");

                    b.Property<int>("TienHocPhi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeDaoTaoId");

                    b.HasIndex("NamHocPhiId");

                    b.ToTable("HocPhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoiDongKhaoThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("KyTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<string>("TenHoiDong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KyTuyenSinhId");

                    b.ToTable("HoiDongKhaoThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.KetQuaThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<long>("HoSoThiId")
                        .HasColumnType("bigint");

                    b.Property<long>("MonThiTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<string>("NhanXet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuyDoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ThanhVienHoiDongId")
                        .HasColumnType("bigint");

                    b.Property<long>("TieuChiDanhGiaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HoSoThiId");

                    b.HasIndex("MonThiTuyenSinhId");

                    b.HasIndex("ThanhVienHoiDongId");

                    b.HasIndex("TieuChiDanhGiaId");

                    b.ToTable("KetQuaThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.Khoi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("TenKhoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoiEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Khoi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.KyTuyenSinh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ChiTieuTuyenSinh")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("KhoiId")
                        .HasColumnType("bigint");

                    b.Property<long>("NamHocId")
                        .HasColumnType("bigint");

                    b.Property<string>("TenKyTuyenSinh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KhoiId");

                    b.HasIndex("NamHocId");

                    b.ToTable("KyTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.CauLacBo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("HocPhi")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoBuoiHoc")
                        .HasColumnType("int");

                    b.Property<string>("TenCauLacBo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCauLacBoTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CauLacBo");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.ChiTietCoSoVatChat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CoSoVatChatId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("HienThi")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiMedia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoSoVatChatId");

                    b.HasIndex("FileId");

                    b.ToTable("ChiTietCoSoVatChat");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.LichSuKien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LoaiSuKienId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSuKien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSuKienTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoaiSuKienId");

                    b.ToTable("LichSuKien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.LoaiSuKienModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoaiSuKien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiSuKienTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiSuKien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.ThoiGianBieu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaHoc")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTietTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ThoiGianBieu");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("HienThi")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LienHe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BoPhanLienHeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NguoiLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoPhanLienHeId");

                    b.ToTable("LienHe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LoaiLePhi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenLePhi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLePhiEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiLePhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LoaiLoiHoSo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("KyHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoaiLoiHoSo");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LoiHoSo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HoSoTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoaiLoiHoSoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenSinhId");

                    b.HasIndex("LoaiLoiHoSoId");

                    b.ToTable("LoiHoSo");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LopDuThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GiaoVienChinhId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MaLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTriPhongThi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GiaoVienChinhId");

                    b.ToTable("LopDuThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.Media", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CoSoVatChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<bool>("HienThi")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CoSoVatChatId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MenuChuyenMuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChuyenMucId")
                        .HasColumnType("bigint");

                    b.Property<long>("MenuConfigId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenMucId");

                    b.HasIndex("MenuConfigId");

                    b.ToTable("MenuChuyenMuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MenuConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkBanner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TinTucId")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("TinTucId");

                    b.ToTable("MenuConfig");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MonThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMonThi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MonThiTuyenSinh", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HeDaoTaoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("KyTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("LopDuThiId")
                        .HasColumnType("bigint");

                    b.Property<long>("MonThiId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HeDaoTaoId");

                    b.HasIndex("KyTuyenSinhId");

                    b.HasIndex("LopDuThiId");

                    b.HasIndex("MonThiId");

                    b.ToTable("MonThiTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NamHoc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DenNam")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenNamHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TuNam")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("NamHoc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NamHocPhi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("NamHocId")
                        .HasColumnType("bigint");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NamHocId")
                        .IsUnique();

                    b.ToTable("NamHocPhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NguoiLienQuan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoQuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HoSoTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoaiQuanHe")
                        .HasColumnType("int");

                    b.Property<string>("NgheNghiep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiCoQuan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenSinhId");

                    b.ToTable("NguoiLienQuan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NhanVien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ChamNgon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cot")
                        .HasColumnType("int");

                    b.Property<string>("DanhHieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hang")
                        .HasColumnType("int");

                    b.Property<bool>("HienThi")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HocVan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LaChuyenVienTuVan")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhongBanId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuaTrinhLamViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThongTinLienLac")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PhongBanId");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhienBan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<long>("TrangId")
                        .HasColumnType("bigint");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrangId");

                    b.ToTable("PhienBan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhongBan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LoaiPhongBan")
                        .HasColumnType("int");

                    b.Property<string>("TenPhongBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhongBanTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhongVan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KetQuaPhongVan")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhongVan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungPhongVan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UngVienId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UngVienId");

                    b.ToTable("PhongVan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.QuyDoiDiem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("DiemBatDau")
                        .HasColumnType("int");

                    b.Property<int>("DiemKetThuc")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KetQua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MonThiTuyenSinhId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MonThiTuyenSinhId");

                    b.ToTable("QuyDoiDiem");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TaiKhoan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThanhTichHocTap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("DaDatKyNang")
                        .HasColumnType("bit");

                    b.Property<bool>("DaDatNangLuc")
                        .HasColumnType("bit");

                    b.Property<bool>("DaHoanThanhKienThuc")
                        .HasColumnType("bit");

                    b.Property<long>("HoSoTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("KhoiHocTapId")
                        .HasColumnType("bigint");

                    b.Property<long?>("KhoiId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenSinhId");

                    b.HasIndex("KhoiId");

                    b.ToTable("ThanhTichHocTap");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThanhVienHoiDong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("DangKichHoat")
                        .HasColumnType("bit");

                    b.Property<long>("HoiDongKhaoThiId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyenKhaoThi")
                        .HasColumnType("int");

                    b.Property<string>("TaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianDong")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianMo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HoiDongKhaoThiId");

                    b.ToTable("ThanhVienHoiDong");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThoiGianThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaThi")
                        .HasColumnType("int");

                    b.Property<int>("DotThi")
                        .HasColumnType("int");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GioDonCon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GioDuThi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("KyTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NgayThi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KyTuyenSinhId");

                    b.ToTable("ThoiGianThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThongTinTruong", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTuyenSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FooterLogoFileId")
                        .HasColumnType("bigint");

                    b.Property<long>("HeaderLogoFileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiTuyenSinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTruong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianLamViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YouTube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FooterLogoFileId");

                    b.HasIndex("HeaderLogoFileId");

                    b.ToTable("ThongTinTruong");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThucDon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnSang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnSangTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauAnSang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauThuBa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauThuHai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauThuNam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauThuSau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MauThuTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenTuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTuanTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuBa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuBaTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuHai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuHaiTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuNam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuNamTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuSau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuSauTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThuTuTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TuNgay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ThucDon");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TieuChiDanhGia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenTieuChi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TieuChiDanhGia");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TieuChiMonThi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("HeSo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MonThiTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("TieuChiDanhGiaId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MonThiTuyenSinhId");

                    b.HasIndex("TieuChiDanhGiaId");

                    b.ToTable("TieuChiMonThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TinTuc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ChuyenMucId")
                        .HasColumnType("bigint");

                    b.Property<long>("FileAnhDaiDienId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LaTinNoiBat")
                        .HasColumnType("bit");

                    b.Property<bool>("LaTinTuc")
                        .HasColumnType("bit");

                    b.Property<int>("LoaiBaiViet")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungChiTietEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungTomTat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungTomTatEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TacGia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDeEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChuyenMucId");

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TinTuyenDung", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDeTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TinTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.Trang", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenTrang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trang");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TuyenDungViTri", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("TinTuyenDungId")
                        .HasColumnType("bigint");

                    b.Property<long>("ViTriTuyenDungId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TinTuyenDungId");

                    b.HasIndex("ViTriTuyenDungId");

                    b.ToTable("TuyenDungVitri");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.UngVien", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiHienTai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiThuongTru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenUngVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotNghiep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViTriUngTuyen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UngVien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.VanDe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenVanDe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VanDe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.VanDeLienHe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("LienHeId")
                        .HasColumnType("bigint");

                    b.Property<long>("VanDeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LienHeId");

                    b.HasIndex("VanDeId");

                    b.ToTable("VanDeLienHe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ViTriBoSung", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("HoSoTuyenDungId")
                        .HasColumnType("bigint");

                    b.Property<long>("ViTriTuyenDungId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenDungId");

                    b.HasIndex("ViTriTuyenDungId");

                    b.ToTable("ViTriBoSung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ViTriTuyenDung", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenViTri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenViTriTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViTriTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.XacNhanPhi", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HoSoTuyenSinhId")
                        .HasColumnType("bigint");

                    b.Property<long>("LoaiLePhiId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NgayXacNhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoChungTu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SoTienNhan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HoSoTuyenSinhId");

                    b.HasIndex("LoaiLePhiId");

                    b.ToTable("XacNhanPhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.YeuCauLienHe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BoPhanLienHeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DaPhanHoi")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoPhanLienHeId");

                    b.ToTable("YeuCauLienHe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.AnhCauLacBo", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.LandingPage.CauLacBo", "CauLacBo")
                        .WithMany("AnhCauLacBo")
                        .HasForeignKey("CauLacBoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.FileUpload", "FileUpload")
                        .WithMany()
                        .HasForeignKey("FileUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CauLacBo");

                    b.Navigation("FileUpload");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.BinhLuan", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.TinTuc", "TinTuc")
                        .WithMany("BinhLuan")
                        .HasForeignKey("TinTucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");

                    b.Navigation("TinTuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.BoPhanLienHe", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.BoPhanLienHe", "BoPhanCha")
                        .WithMany()
                        .HasForeignKey("BoPhanChaId");

                    b.Navigation("BoPhanCha");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CaiDatChiTiet", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.CaiDatTongThe", "CaiDatTongThe")
                        .WithMany("CaiDatChiTiet")
                        .HasForeignKey("CaiDatTongTheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaiDatTongThe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CaiDatTongThe", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.PhienBan", null)
                        .WithMany("CaiDat")
                        .HasForeignKey("PhienBanId");

                    b.HasOne("NS.Core.Models.Entities.Trang", "Trang")
                        .WithMany("CaiDatTongThe")
                        .HasForeignKey("TrangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trang");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ChiTietChamThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoThi", "HoSoThi")
                        .WithMany()
                        .HasForeignKey("HoSoThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.MonThiTuyenSinh", "MonThiTuyenSinh")
                        .WithMany()
                        .HasForeignKey("MonThiTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.TieuChiMonThi", "TieuChiMonThi")
                        .WithMany()
                        .HasForeignKey("TieuChiMonThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoThi");

                    b.Navigation("MonThiTuyenSinh");

                    b.Navigation("TieuChiMonThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ChungChiLienQuan", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenDung", "HoSoTuyenDung")
                        .WithMany("ChungChiLienQuan")
                        .HasForeignKey("HoSoTuyenDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.DoiNgayThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoThi", "HoSoThi")
                        .WithMany()
                        .HasForeignKey("HoSoThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ThoiGianThi", "ThoiGianThi")
                        .WithMany()
                        .HasForeignKey("ThoiGianThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoThi");

                    b.Navigation("ThoiGianThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.GiaoVienTrongThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.LopDuThi", "LopDuThi")
                        .WithMany()
                        .HasForeignKey("LopDuThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ThanhVienHoiDong", "ThanhVienHoiDong")
                        .WithMany()
                        .HasForeignKey("ThanhVienHoiDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopDuThi");

                    b.Navigation("ThanhVienHoiDong");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenSinh", "HoSoTuyenSinh")
                        .WithMany()
                        .HasForeignKey("HoSoTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.LopDuThi", "LopDuThi")
                        .WithMany()
                        .HasForeignKey("LopDuThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoTuyenSinh");

                    b.Navigation("LopDuThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoTuyenDung", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ViTriTuyenDung", "ViTriTuyenDung")
                        .WithMany()
                        .HasForeignKey("ViTriTuyenDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");

                    b.Navigation("ViTriTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoTuyenSinh", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HeDaoTao", "HeDaoTao")
                        .WithMany()
                        .HasForeignKey("HeDaoTaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.Khoi", "KhoiTuyenSinh")
                        .WithMany()
                        .HasForeignKey("KhoiTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.KyTuyenSinh", "KyTuyenSinh")
                        .WithMany()
                        .HasForeignKey("KyTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.LopDuThi", "LopDuThi")
                        .WithMany()
                        .HasForeignKey("LopDuThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ThoiGianThi", "ThoiGianThi")
                        .WithMany()
                        .HasForeignKey("ThoiGianThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeDaoTao");

                    b.Navigation("KhoiTuyenSinh");

                    b.Navigation("KyTuyenSinh");

                    b.Navigation("LopDuThi");

                    b.Navigation("TaiKhoan");

                    b.Navigation("ThoiGianThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HocPhi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HeDaoTao", "HeDaoTao")
                        .WithMany()
                        .HasForeignKey("HeDaoTaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.NamHocPhi", "NamHocPhi")
                        .WithMany("HocPhi")
                        .HasForeignKey("NamHocPhiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeDaoTao");

                    b.Navigation("NamHocPhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoiDongKhaoThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.KyTuyenSinh", "KyTuyenSinh")
                        .WithMany()
                        .HasForeignKey("KyTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KyTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.KetQuaThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoThi", "HoSoThi")
                        .WithMany()
                        .HasForeignKey("HoSoThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.MonThiTuyenSinh", "MonThiTuyenSinh")
                        .WithMany()
                        .HasForeignKey("MonThiTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ThanhVienHoiDong", "ThanhVienHoiDong")
                        .WithMany()
                        .HasForeignKey("ThanhVienHoiDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.TieuChiDanhGia", "TieuChiDanhGia")
                        .WithMany()
                        .HasForeignKey("TieuChiDanhGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoThi");

                    b.Navigation("MonThiTuyenSinh");

                    b.Navigation("ThanhVienHoiDong");

                    b.Navigation("TieuChiDanhGia");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.KyTuyenSinh", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.Khoi", "Khoi")
                        .WithMany()
                        .HasForeignKey("KhoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.NamHoc", "NamHoc")
                        .WithMany()
                        .HasForeignKey("NamHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoi");

                    b.Navigation("NamHoc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.ChiTietCoSoVatChat", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.CoSoVatChat", "CoSoVatChat")
                        .WithMany("ChiTietCoSoVatChat")
                        .HasForeignKey("CoSoVatChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.FileUpload", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.Navigation("CoSoVatChat");

                    b.Navigation("File");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.LichSuKien", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.LandingPage.LoaiSuKienModel", "LoaiSuKien")
                        .WithMany()
                        .HasForeignKey("LoaiSuKienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiSuKien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LienHe", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.BoPhanLienHe", "BoPhanLienHe")
                        .WithMany()
                        .HasForeignKey("BoPhanLienHeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoPhanLienHe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LoiHoSo", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenSinh", "HoSoTuyenSinh")
                        .WithMany()
                        .HasForeignKey("HoSoTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.LoaiLoiHoSo", "LoaiLoiHoSo")
                        .WithMany()
                        .HasForeignKey("LoaiLoiHoSoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoTuyenSinh");

                    b.Navigation("LoaiLoiHoSo");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LopDuThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.ThanhVienHoiDong", "GiaoVienChinh")
                        .WithMany()
                        .HasForeignKey("GiaoVienChinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiaoVienChinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.Media", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.CoSoVatChat", "CoSoVatChat")
                        .WithMany()
                        .HasForeignKey("CoSoVatChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoSoVatChat");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MenuChuyenMuc", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.ChuyenMuc", "ChuyenMuc")
                        .WithMany()
                        .HasForeignKey("ChuyenMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.MenuConfig", "MenuConfig")
                        .WithMany("MenuChuyenMuc")
                        .HasForeignKey("MenuConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuyenMuc");

                    b.Navigation("MenuConfig");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MenuConfig", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.MenuConfig", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.HasOne("NS.Core.Models.Entities.TinTuc", "TinTuc")
                        .WithMany()
                        .HasForeignKey("TinTucId");

                    b.Navigation("Parent");

                    b.Navigation("TinTuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MonThiTuyenSinh", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HeDaoTao", "HeDaoTao")
                        .WithMany("MonThiTuyenSinhs")
                        .HasForeignKey("HeDaoTaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.KyTuyenSinh", "KyTuyenSinh")
                        .WithMany()
                        .HasForeignKey("KyTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.LopDuThi", "LopDuThi")
                        .WithMany("MonThiTuyenSinhs")
                        .HasForeignKey("LopDuThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.MonThi", "MonThi")
                        .WithMany()
                        .HasForeignKey("MonThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeDaoTao");

                    b.Navigation("KyTuyenSinh");

                    b.Navigation("LopDuThi");

                    b.Navigation("MonThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NamHocPhi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.NamHoc", "NamHoc")
                        .WithOne("NamHocPhi")
                        .HasForeignKey("NS.Core.Models.Entities.NamHocPhi", "NamHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NamHoc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NguoiLienQuan", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenSinh", "HoSoTuyenSinh")
                        .WithMany("NguoiLienQuan")
                        .HasForeignKey("HoSoTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NhanVien", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.PhongBan", "PhongBan")
                        .WithMany("NhanVien")
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhienBan", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.Trang", "Trang")
                        .WithMany()
                        .HasForeignKey("TrangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trang");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhongVan", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.UngVien", "UngVien")
                        .WithMany()
                        .HasForeignKey("UngVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UngVien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.QuyDoiDiem", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.MonThiTuyenSinh", "MonThiTuyenSinh")
                        .WithMany()
                        .HasForeignKey("MonThiTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonThiTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThanhTichHocTap", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenSinh", "HoSoTuyenSinh")
                        .WithMany()
                        .HasForeignKey("HoSoTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.Khoi", "Khoi")
                        .WithMany()
                        .HasForeignKey("KhoiId");

                    b.Navigation("HoSoTuyenSinh");

                    b.Navigation("Khoi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThanhVienHoiDong", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoiDongKhaoThi", "HoiDongKhaoThi")
                        .WithMany()
                        .HasForeignKey("HoiDongKhaoThiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoiDongKhaoThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThoiGianThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.KyTuyenSinh", "KyTuyenSinh")
                        .WithMany()
                        .HasForeignKey("KyTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KyTuyenSinh");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ThongTinTruong", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.FileUpload", "FooterLogoFile")
                        .WithMany()
                        .HasForeignKey("FooterLogoFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.FileUpload", "HeaderLogoFile")
                        .WithMany()
                        .HasForeignKey("HeaderLogoFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FooterLogoFile");

                    b.Navigation("HeaderLogoFile");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TieuChiMonThi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.MonThiTuyenSinh", "MonThiTuyenSinh")
                        .WithMany("TieuChiMonThi")
                        .HasForeignKey("MonThiTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.TieuChiDanhGia", "TieuChiDanhGia")
                        .WithMany()
                        .HasForeignKey("TieuChiDanhGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonThiTuyenSinh");

                    b.Navigation("TieuChiDanhGia");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TinTuc", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.ChuyenMuc", "ChuyenMuc")
                        .WithMany()
                        .HasForeignKey("ChuyenMucId");

                    b.Navigation("ChuyenMuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TuyenDungViTri", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.TinTuyenDung", "TinTuyenDung")
                        .WithMany("TuyenDungVitri")
                        .HasForeignKey("TinTuyenDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ViTriTuyenDung", "ViTriTuyenDung")
                        .WithMany()
                        .HasForeignKey("ViTriTuyenDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TinTuyenDung");

                    b.Navigation("ViTriTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.VanDeLienHe", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.LienHe", "LienHe")
                        .WithMany()
                        .HasForeignKey("LienHeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.VanDe", "VanDe")
                        .WithMany()
                        .HasForeignKey("VanDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LienHe");

                    b.Navigation("VanDe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.ViTriBoSung", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenDung", "HoSoTuyenDung")
                        .WithMany("ViTriBoSung")
                        .HasForeignKey("HoSoTuyenDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.ViTriTuyenDung", "ViTriTuyenDung")
                        .WithMany()
                        .HasForeignKey("ViTriTuyenDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoTuyenDung");

                    b.Navigation("ViTriTuyenDung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.XacNhanPhi", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.HoSoTuyenSinh", "HoSoTuyenSinh")
                        .WithMany()
                        .HasForeignKey("HoSoTuyenSinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NS.Core.Models.Entities.LoaiLePhi", "LoaiLePhi")
                        .WithMany()
                        .HasForeignKey("LoaiLePhiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoTuyenSinh");

                    b.Navigation("LoaiLePhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.YeuCauLienHe", b =>
                {
                    b.HasOne("NS.Core.Models.Entities.BoPhanLienHe", "BoPhanLienHe")
                        .WithMany()
                        .HasForeignKey("BoPhanLienHeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoPhanLienHe");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CaiDatTongThe", b =>
                {
                    b.Navigation("CaiDatChiTiet");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.CoSoVatChat", b =>
                {
                    b.Navigation("ChiTietCoSoVatChat");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HeDaoTao", b =>
                {
                    b.Navigation("MonThiTuyenSinhs");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoTuyenDung", b =>
                {
                    b.Navigation("ChungChiLienQuan");

                    b.Navigation("ViTriBoSung");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.HoSoTuyenSinh", b =>
                {
                    b.Navigation("NguoiLienQuan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LandingPage.CauLacBo", b =>
                {
                    b.Navigation("AnhCauLacBo");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.LopDuThi", b =>
                {
                    b.Navigation("MonThiTuyenSinhs");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MenuConfig", b =>
                {
                    b.Navigation("MenuChuyenMuc");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.MonThiTuyenSinh", b =>
                {
                    b.Navigation("TieuChiMonThi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NamHoc", b =>
                {
                    b.Navigation("NamHocPhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.NamHocPhi", b =>
                {
                    b.Navigation("HocPhi");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhienBan", b =>
                {
                    b.Navigation("CaiDat");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.PhongBan", b =>
                {
                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TinTuc", b =>
                {
                    b.Navigation("BinhLuan");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.TinTuyenDung", b =>
                {
                    b.Navigation("TuyenDungVitri");
                });

            modelBuilder.Entity("NS.Core.Models.Entities.Trang", b =>
                {
                    b.Navigation("CaiDatTongThe");
                });
#pragma warning restore 612, 618
        }
    }
}
